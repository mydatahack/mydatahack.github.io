{"version":3,"file":"component---src-pages-words-tsx-5c0e6748498ce66b8d7a.js","mappings":"4NAIaA,GAAcC,EAAAA,EAAAA,KAAH,gFACpBC,EAAAA,GAG8BC,EAAAA,GAAAA,I,UCDrBC,EAAaC,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,uGASVC,GAA0BD,EAAAA,EAAAA,SAAOE,EAAAA,EAAAA,KAAV,wFAAGF,CAAH,sIAUvBG,GAAsBH,EAAAA,EAAAA,SAAOE,EAAAA,EAAAA,KAAV,oFAAGF,CAAH,iIAUnBI,GAAqBJ,EAAAA,EAAAA,SAAOE,EAAAA,EAAAA,KAAV,mFAAGF,CAAH,iLAYlBK,EAAUL,EAAAA,QAAAA,EAAAA,WAAH,6DAAGA,CAAH,qBAChBL,GAISW,GAAgBN,EAAAA,EAAAA,SAAOK,GAAV,8EAAGL,CAAH,uBAYpBO,EAAW,CACfC,SATsB,CACtBC,QAAS,KASTC,UANuB,CACvBD,QAAS,IAOLE,EAAiB,CACrBC,EAAG,CAAEC,KAAM,SAAUC,UAAW,KAChCC,QAAS,CAAEC,SAAU,KASVC,EAAqC,SAAC,GAI7C,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,MAEA,GAAgCC,EAAAA,EAAAA,WAAS,GAAlCb,EAAP,KAAiBc,EAAjB,KAMA,OACE,SAACvB,EAAD,CAAYwB,QALS,WACrBD,GAAad,IAIb,UACE,UAACP,EAAD,CACEuB,QAAShB,EAAW,WAAa,YACjCD,SAAUA,EACVkB,WAAYd,EAHd,WAKE,SAACR,EAAD,WACE,SAACE,EAAD,UAAUa,OAEZ,UAACd,EAAD,YACE,SAACE,EAAD,2BACA,SAACD,EAAD,UAAUc,KACV,SAACb,EAAD,sBACA,SAACD,EAAD,UAAUe,a,4kBCvGdM,GAAkB9B,EAAAA,EAAAA,KAAH,+BAWR+B,GANe3B,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,8BACrB0B,GACkB,SAACE,GAAD,OAAWA,EAAMC,SAIP7B,EAAAA,QAAAA,GAAAA,WAAH,4EAAGA,CAAH,0LAehB8B,EAAmB9B,EAAAA,QAAAA,GAAAA,WAAH,4EAAGA,CAAH,+BChBhB+B,EAAqC,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QACnD,OACE,SAAC,EAAD,UACGA,EAAQC,KAAI,SAACC,GAAD,OACX,SAAC,EAAD,UAAuCA,GAAhBC,KAAKC,gBCZvBC,EAAY,WACvB,OACE,SAACN,EAAD,CACEC,QAASM,EAAAA,EAAAA,MACD,kBAAMH,KAAKC,SAAW,MAC3BH,KAAI,SAACf,GAAD,OACH,SAACD,EAAD,CAEEC,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,MAAOF,EAAKE,OAHPF,EAAKA,a,0FCPTqB,EAAcvC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,kBAIXwC,EAA6BxC,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,+F,4GCNjCyC,EAAezC,EAAAA,QAAAA,OAAAA,WAAH,yEAAGA,CAAH,2KAeL0C,EAA6B,WAIxC,OACE,SAACD,EAAD,CAAcE,KAAK,SAASpB,QAAS,WAHrCqB,OAAOC,SAASC,UAGhB,wB,oBCCJ,EAhB4B,WAC1B,OACE,iCACE,SAAC,KAAD,KACA,2BACE,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAAC7B,EAAA,GAAD,KACA,SAACyB,EAAD","sources":["webpack://mydatahack-blog-site-gatsby/./src/fec/Typography/Typography.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/FlipCard/FlipCard.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Carousel/Carousel.styled.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Carousel/Carousel.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/FlipCard/FlipCards.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Space/index.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Buttons/RandomiseButton/RandomiseButton.tsx","webpack://mydatahack-blog-site-gatsby/./src/pages/words.tsx"],"sourcesContent":["import { css } from 'styled-components'\n\nimport { BREAKPOINT, LatoRegular } from '../styles'\n\nexport const TextRegular = css`\n  ${LatoRegular};\n  font-size: 0.875rem;\n\n  @media screen and (min-width: ${BREAKPOINT.SM}px) {\n    font-size: 1rem;\n  }\n`\n","import { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nimport { TextRegular } from '../Typography'\n\n// This controls the size of the flip card\nexport const StyledCard = styled.div`\n  position: relative;\n  width: 340px;\n  height: 280px;\n  perspective: 500px;\n  display: flex;\n  justify-content: center;\n`\n\nexport const StyledFlipCardContainer = styled(motion.div)`\n  position: absolute;\n  width: 300px;\n  height: 100%;\n  transform-style: preserve-3d;\n  color: #2a2727;\n  border-radius: 20px;\n  border: solid 1px #c7c7c7;\n`\n\nexport const StyledFlipCardFront = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backface-visibility: hidden;\n`\n\nexport const StyledFlipCardBack = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transform: rotateY(180deg);\n  backface-visibility: hidden;\n`\n\nexport const StyledP = styled.p`\n  ${TextRegular}\n  margin: 10px;\n`\n\nexport const StyledHeading = styled(StyledP)`\n  font-weight: bold;\n`\n\nconst showBcakAnimate = {\n  rotateY: 180,\n}\n\nconst showFrontAnimate = {\n  rotateY: 0,\n}\n\nconst variants = {\n  showBack: showBcakAnimate,\n  showFront: showFrontAnimate,\n}\nconst flipTransition = {\n  x: { type: 'spring', stiffness: 100 },\n  default: { duration: 0.5 },\n}\n\nexport interface FlipCardProps {\n  word: string\n  definition: string\n  usage?: string\n}\n\nexport const FlipCard: React.VFC<FlipCardProps> = ({\n  word,\n  definition,\n  usage,\n}) => {\n  const [showBack, setShowBack] = useState(false)\n\n  const onClickHandler = () => {\n    setShowBack(!showBack)\n  }\n\n  return (\n    <StyledCard onClick={onClickHandler}>\n      <StyledFlipCardContainer\n        animate={showBack ? 'showBack' : 'showFront'}\n        variants={variants}\n        transition={flipTransition}\n      >\n        <StyledFlipCardFront>\n          <StyledP>{word}</StyledP>\n        </StyledFlipCardFront>\n        <StyledFlipCardBack>\n          <StyledHeading>Definition:</StyledHeading>\n          <StyledP>{definition}</StyledP>\n          <StyledHeading>Usage:</StyledHeading>\n          <StyledP>{usage}</StyledP>\n        </StyledFlipCardBack>\n      </StyledFlipCardContainer>\n    </StyledCard>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nconst squareDimension = css`\n  width: 300px;\n  height: 500px;\n`\n\nexport const StyledSquare = styled.div`\n  ${squareDimension}\n  background-color: ${(props) => props.color};\n`\n\n// This controls the width of the carousel container.\nexport const StyledCarouselUl = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  list-style-type: none;\n  scroll-snap-type: x mandatory;\n  width: 350px;\n  height: 400px;\n  overflow: scroll;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const StyledCarouselLi = styled.li`\n  scroll-snap-align: center;\n`\n","import { ReactNode } from 'react'\n\nimport {\n  StyledCarouselLi,\n  StyledCarouselUl,\n  StyledSquare,\n} from './Carousel.styled'\n\nexport interface CarouselProps {\n  content: ReactNode[]\n}\n\nexport const Carousel: React.VFC<CarouselProps> = ({ content }) => {\n  return (\n    <StyledCarouselUl>\n      {content.map((node) => (\n        <StyledCarouselLi key={Math.random()}>{node}</StyledCarouselLi>\n      ))}\n    </StyledCarouselUl>\n  )\n}\n\nexport const Carousel2 = () => {\n  return (\n    <StyledCarouselUl>\n      <StyledCarouselLi>\n        <StyledSquare color=\"red\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"blue\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"pink\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"purple\" />\n      </StyledCarouselLi>\n    </StyledCarouselUl>\n  )\n}\n","import words from '../../data/words.json'\nimport { Carousel } from '../Carousel'\nimport { FlipCard } from './FlipCard'\n\nexport const FlipCards = () => {\n  return (\n    <Carousel\n      content={words.words\n        .sort(() => Math.random() - 0.5)\n        .map((word) => (\n          <FlipCard\n            key={word.word}\n            word={word.word}\n            definition={word.definition}\n            usage={word.usage}\n          />\n        ))}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { BREAKPOINT } from '../styles'\n\nexport const StyledSpace = styled.div`\n  margin: 30px;\n`\n\nexport const StyledContainerForFlipCard = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  width: 100px;\n  height: 30px;\n  border: 1px solid #04aa6d;\n  cursor: pointer;\n  background-color: white;\n  color: #04aa6d;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: #04aa6d;\n    color: white;\n  }\n`\n\nexport const RandomiseButton: React.VFC = () => {\n  const onClickHandler = () => {\n    window.location.reload()\n  }\n  return (\n    <StyledButton role=\"button\" onClick={() => onClickHandler()}>\n      Randomise\n    </StyledButton>\n  )\n}\n","import React from 'react'\n\nimport { ContentContainer, GlobalStyles } from '../fec'\nimport { RandomiseButton } from '../fec/Buttons'\nimport { FlipCards } from '../fec/FlipCard'\nimport { StyledContainerForFlipCard } from '../fec/Space'\n\nconst WordsPage: React.FC = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <main>\n        <ContentContainer>\n          <StyledContainerForFlipCard>\n            <FlipCards />\n            <RandomiseButton />\n          </StyledContainerForFlipCard>\n        </ContentContainer>\n      </main>\n    </>\n  )\n}\n\nexport default WordsPage\n"],"names":["TextRegular","css","LatoRegular","BREAKPOINT","StyledCard","styled","StyledFlipCardContainer","motion","StyledFlipCardFront","StyledFlipCardBack","StyledP","StyledHeading","variants","showBack","rotateY","showFront","flipTransition","x","type","stiffness","default","duration","FlipCard","word","definition","usage","useState","setShowBack","onClick","animate","transition","squareDimension","StyledCarouselUl","props","color","StyledCarouselLi","Carousel","content","map","node","Math","random","FlipCards","words","StyledSpace","StyledContainerForFlipCard","StyledButton","RandomiseButton","role","window","location","reload"],"sourceRoot":""}