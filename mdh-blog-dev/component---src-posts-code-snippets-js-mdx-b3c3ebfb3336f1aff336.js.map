{"version":3,"file":"component---src-posts-code-snippets-js-mdx-b3c3ebfb3336f1aff336.js","mappings":"wLAIA,MAAMA,EAAYC,IAAA,IAAC,SAACC,EAAQ,YAAEC,GAAYF,EAAA,OAAKG,EAAAA,cAAoBC,EAAAA,EAAY,CAC7EF,YAAaA,GACZD,EAAS,EACZ,SAASI,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,QACJC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOX,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBI,EAAYG,GAAI,KAAM,qCAAsC,KAAMP,EAAAA,cAAoBI,EAAYI,EAAG,KAAM,sCAAuCR,EAAAA,cAAoBI,EAAYK,IAAK,CAC1PG,wBAAyB,CACvBC,OAAQ,kDAER,4CAA6Cb,EAAAA,cAAoBI,EAAYK,IAAK,CACpFG,wBAAyB,CACvBC,OAAQ,yDAER,2CAA4C,KAAMb,EAAAA,cAAoBI,EAAYK,IAAK,CACzFG,wBAAyB,CACvBC,OAAQ,s5PAER,KAAMb,EAAAA,cAAoBI,EAAYI,EAAG,KAAMR,EAAAA,cAAoBI,EAAYK,IAAK,CACtFG,wBAAyB,CACvBC,OAAQ,2CAER,QAASb,EAAAA,cAAoBI,EAAYK,IAAK,CAChDG,wBAAyB,CACvBC,OAAQ,2CAER,KAAMb,EAAAA,cAAoBI,EAAYK,IAAK,CAC7CG,wBAAyB,CACvBC,OAAQ,2CAER,QAASb,EAAAA,cAAoBI,EAAYK,IAAK,CAChDG,wBAAyB,CACvBC,OAAQ,2CAER,kBAAmBb,EAAAA,cAAoBI,EAAYK,IAAK,CAC1DG,wBAAyB,CACvBC,OAAQ,iDAER,OAAQb,EAAAA,cAAoBI,EAAYK,IAAK,CAC/CG,wBAAyB,CACvBC,OAAQ,gDAER,KAAM,KAAMb,EAAAA,cAAoBI,EAAYK,IAAK,CACnDG,wBAAyB,CACvBC,OAAQ,k4CAER,KAAMb,EAAAA,cAAoBI,EAAYI,EAAG,KAAM,cAAe,KAAMR,EAAAA,cAAoBI,EAAYK,IAAK,CAC3GG,wBAAyB,CACvBC,OAAQ,0vEAGd,CAIA,UAHA,SAAoBV,GAClB,YADuB,IAALA,IAAAA,EAAQ,CAAC,GACpBH,EAAAA,cAAoBJ,EAAWO,EAAOH,EAAAA,cAAoBE,EAAmBC,GACtF,C,8ECpDO,MAAMF,EAAaJ,IAAiD,IAAhD,SAAEC,EAAQ,YAAEC,GAA8BF,EAGnE,MAAM,MAAEiB,EAAK,YAAEC,GAAgBhB,EAAYiB,YAE3C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,UAAWL,EAAOC,YAAaA,EAAYjB,SAChDA,GACM,C,sECgBN,MAAMsB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBV,GAC/B,MAAMW,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfT,EACFA,EAAWW,GAGb,IAAIA,KAAsBX,IAChC,CAACW,EAAmBX,GACzB,C","sources":["webpack://mydatahack-blog-site-gatsby/./src/posts/code/snippets-js.mdx","webpack://mydatahack-blog-site-gatsby/./src/components/PostLayout/PostLayout.tsx","webpack://mydatahack-blog-site-gatsby/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {PostLayout} from \"../../components/PostLayout\";\nconst MDXLayout = ({children, pageContext}) => React.createElement(PostLayout, {\n  pageContext: pageContext\n}, children);\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"1. Grid component for Material UI\"), \"\\n\", React.createElement(_components.p, null, \"I was trying to figure out how the \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;Grid></code>\"\n    }\n  }), \" component calculate the width. It is in \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gridGenerator.ts</code>\"\n    }\n  }), \". It seems to calculate the percentage.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateGridSizeStyles</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> theme<span class=\\\"token punctuation\\\">,</span> ownerState <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> Props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> getSelfSpacing <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createGetSelfSpacing</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  traverseBreakpoints<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token string\\\">'auto'</span> <span class=\\\"token operator\\\">|</span> number <span class=\\\"token operator\\\">|</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n    theme<span class=\\\"token punctuation\\\">.</span>breakpoints<span class=\\\"token punctuation\\\">,</span>\\n    ownerState<span class=\\\"token punctuation\\\">.</span>gridSize<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">appendStyle<span class=\\\"token punctuation\\\">,</span> value</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">maxWidth</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'100%'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexShrink</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">maxWidth</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'none'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">width</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> value <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'number'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">width</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">calc(100% * </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> / </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">getParentColumns</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>\\n            <span class=\\\"token function\\\">isNestedContainer</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\"> + </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">getSelfSpacing</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'column'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span>\\n          <span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token function\\\">appendStyle</span><span class=\\\"token punctuation\\\">(</span>styles<span class=\\\"token punctuation\\\">,</span> style<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> styles<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lg</code>\"\n    }\n  }), \" (or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">md</code>\"\n    }\n  }), \", \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sm</code>\"\n    }\n  }), \", or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">xm</code>\"\n    }\n  }), \") takes either \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GridSize</code>\"\n    }\n  }), \" or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boolean</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">GridSize</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'auto'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">RegularBreakpoints</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/**\\n   * If a number, it sets the number of columns the grid item uses.\\n   * It can't be greater than the total number of columns of the container (12 by default).\\n   * If 'auto', the grid item's width matches its content.\\n   * If false, the prop is ignored.\\n   * If true, the grid item's width grows to use the space available in the grid container.\\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\\n   * @default false\\n   */</span>\\n  lg<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token operator\\\">|</span> GridSize<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">...</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Table APIs\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Table</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\"> \\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span> <span class=\\\"token attr-name\\\">span</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token constant\\\">SM</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">LG</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">with</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>67px<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\"> -> with: 2/12 %\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Table</span></span><span class=\\\"token punctuation\\\">></span></span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import { ReactNode } from 'react'\n\nimport { Layout } from '../Layout'\n\ninterface PostLayoutProps {\n  children: ReactNode\n  pageContext: any\n}\n\nexport const PostLayout = ({ children, pageContext }: PostLayoutProps) => {\n  // When we have error here for undefined title, we need to stop and start gatsby.\n  // then, it will register the values in frontmatter\n  const { title, description } = pageContext.frontmatter\n\n  return (\n    <Layout siteTitle={title} description={description}>\n      {children}\n    </Layout>\n  )\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["MDXLayout","_ref","children","pageContext","React","PostLayout","_createMdxContent","props","_components","Object","assign","h2","p","div","_provideComponents","components","dangerouslySetInnerHTML","__html","title","description","frontmatter","_jsx","Layout","siteTitle","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}