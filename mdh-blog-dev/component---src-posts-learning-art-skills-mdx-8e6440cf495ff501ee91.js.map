{"version":3,"file":"component---src-posts-learning-art-skills-mdx-8e6440cf495ff501ee91.js","mappings":"8KAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,GAAI,KAAM,QAAS,KAAMO,EAAAA,cAAoBV,EAAYI,EAAG,KAAMM,EAAAA,cAAoBV,EAAYK,OAAQ,KAAM,aAAc,KAAMK,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,43BAA63B,KAAMM,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,mBAAoB,KAAMI,EAAAA,cAAoBV,EAAYI,EAAG,KAAMM,EAAAA,cAAoBV,EAAYO,EAAG,CAC/wCI,KAAM,oEACL,eAAgB,KAAMD,EAAAA,cAAoBV,EAAYO,EAAG,CAC1DI,KAAM,mDACL,2BAA4B,KAAMD,EAAAA,cAAoBV,EAAYO,EAAG,CACtEI,KAAM,yEACL,oBAAqB,KAAMD,EAAAA,cAAoBV,EAAYO,EAAG,CAC/DI,KAAM,qEACL,6BAA8B,KAAMD,EAAAA,cAAoBV,EAAYI,EAAG,KAAMM,EAAAA,cAAoBV,EAAYK,OAAQ,KAAM,kBAAmB,KAAMK,EAAAA,cAAoBV,EAAYI,EAAG,KAAM,gVAClM,CAKA,UAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWd,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECSO,MAAMe,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,C","sources":["webpack://mydatahack-blog-site-gatsby/./src/posts/learning/art-skills.mdx","webpack://mydatahack-blog-site-gatsby/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"GIMP\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Beginner\")), \"\\n\", React.createElement(_components.p, null, \"âœ… Import image, change dimension and save it (https://www.gimp.org/tutorials/GIMP_Quickies/#changing-the-size-dimensions-of-an-image-scale).\\nâœ… Crop image and save (Same link as above).\\nðŸš« Creating logo (https://www.gimp.org/tutorials/Floating_Logo/) - couldn't figure out how to do bump mapping...\\nâœ… Create Circle Image (https://www.gimp.org/tutorials/CircleImage/)\\nâœ… Making a Heart Shape with Selections (https://www.gimp.org/tutorials/Heart_Shape/)\\nâœ… Layer Mask (https://www.gimp.org/tutorials/Layer_Masks/)\\nâœ… Basic Color Curves (https://www.gimp.org/tutorials/Basic_Color_Curves/)\\nâœ… GIMP Profile (https://www.gimp.org/tutorials/GIMPProfile/)\\nâœ… Image Format Overview (https://www.gimp.org/tutorials/ImageFormats/)\\nâœ… Asset Folders (https://www.gimp.org/tutorials/Asset_Folders/) - need to come back to it when I really need to install stuff or add personal python script folder.\"), \"\\n\", React.createElement(_components.h3, null, \"Further Reading\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://patdavid.net/2011/10/getting-around-in-gimp-layer-masks/\"\n  }, \"Layer Masks\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.gimp.org/tutorials/Selective_Color/\"\n  }, \"Selective Colourisation\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://patdavid.net/2011/10/getting-around-in-gimp-luminosity-masks/\"\n  }, \"Luminosity Masks\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.tomshardware.com/how-to/remove-background-images-gimp\"\n  }, \"How to Remove Background\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Photo Editing\")), \"\\n\", React.createElement(_components.p, null, \"[] Digital B&W Conversion (https://www.gimp.org/tutorials/Digital_Black_and_White_Conversion/)\\n[] Luminosity Masks (https://www.gimp.org/tutorials/Luminosity_Masks/)\\n[] Tone Mapping with Colours/Exposure (https://www.gimp.org/tutorials/Tone_Mapping_Using_GIMP_Levels/)\\n[] Focus Group (https://www.gimp.org/tutorials/Focus_Group/)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","h3","a","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}