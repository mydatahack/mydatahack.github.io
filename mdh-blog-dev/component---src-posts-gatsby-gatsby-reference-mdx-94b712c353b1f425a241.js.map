{"version":3,"file":"component---src-posts-gatsby-gatsby-reference-mdx-94b712c353b1f425a241.js","mappings":"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","sources":["webpack://gatsby-portfolio-site-example/./src/posts/gatsby/gatsby-reference.mdx","webpack://gatsby-portfolio-site-example/./src/components/PostLayout/PostLayout.tsx","webpack://gatsby-portfolio-site-example/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {PostLayout} from \"../../components/PostLayout\";\nconst MDXLayout = ({children, pageContext}) => React.createElement(PostLayout, {\n  pageContext: pageContext\n}, children);\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\",\n    div: \"div\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"(1) Trouble shoot\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"StaticImage component doesn't work in the mdx file.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"No, it just doesn't work. You need to create a tsx component and import it to mdx file.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Compilation fails with system error.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Just run \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yarn clean</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">$ gatsby develop\\nâ ™ compile gatsby files\\nlibc++abi: terminating due to uncaught exception of <span class=\\\"token builtin class-name\\\">type</span> std::__1::system_error: mutex lock failed: Invalid argument\\nerror Command failed with signal <span class=\\\"token string\\\">\\\"SIGABRT\\\"</span><span class=\\\"token builtin class-name\\\">.</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"(2) Customisation\"), \"\\n\", React.createElement(_components.h2, null, \"Adding tailwind\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Install dependencies\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> <span class=\\\"token parameter variable\\\">-D</span> tailwindcss postcss autoprefixer gatsby-plugin-postcss\\nnpx tailwindcss init <span class=\\\"token parameter variable\\\">-p</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Enable the Gatsby PostCSS plugin in gatsby-config.js.\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">plugins</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token string\\\">'gatsby-plugin-postcss'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Configure template paths in tailwind.config.js.\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/** @type {import('tailwindcss').Config} */</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token string\\\">\\\"./src/pages/**/*.{js,jsx,ts,tsx}\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string\\\">\\\"./src/components/**/*.{js,jsx,ts,tsx}\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token literal-property property\\\">theme</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">extend</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token literal-property property\\\">plugins</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"4\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Add the tailwind directive to global.css\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\"><pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@tailwind</span> base<span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@tailwind</span> components<span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@tailwind</span> utilities<span class=\\\"token punctuation\\\">;</span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Import CSS file in gatsby-browser.js.\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./src/styles/global.css'</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import { ReactNode } from 'react'\n\nimport { Layout } from '../Layout'\n\ninterface PostLayoutProps {\n  children: ReactNode\n  pageContext: any\n}\n\nexport const PostLayout = ({ children, pageContext }: PostLayoutProps) => {\n  // When we have error here for undefined title, we need to stop and start gatsby.\n  // then, it will register the values in frontmatter\n  const { title, description } = pageContext.frontmatter\n\n  return (\n    <Layout siteTitle={title} description={description}>\n      {children}\n    </Layout>\n  )\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["MDXLayout","_ref","children","pageContext","React","PostLayout","_createMdxContent","props","_components","Object","assign","h1","ol","li","p","div","h2","_provideComponents","components","start","dangerouslySetInnerHTML","__html","title","description","frontmatter","_jsx","Layout","siteTitle","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}