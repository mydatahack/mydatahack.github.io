{"version":3,"file":"component---src-pages-index-tsx-c07b2c4efdedc9e2d49e.js","mappings":"0MAEaA,E,OAASC,QAAAA,GAAAA,WAAH,kEAAGA,CAAH,6B,UCENC,EAAW,WACtB,IAgBMC,GAhBOC,EAAAA,EAAAA,gBAAc,cAgBRC,OAAOC,MAE1B,OACEC,EAAAA,EAAAA,KAACP,EAAD,UACGG,EAAMK,KAAI,SAACC,GAAD,eACTF,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,UACEA,EAAAA,EAAAA,KAACG,EAAAA,KAAD,CAAMC,IAAIF,SAAA,QAAAA,EAAAA,EAAMG,mBAAN,WAAAH,EAAA,EAAmBI,OAAQ,GAArC,SACGJ,SADH,UACGA,EAAMG,mBADT,aACGE,EAAmBC,SAFfN,EAAKO,GADf,KArBA,E,UCAMC,EAAa,WACxB,IAiBMd,GAhBJC,EAAAA,EAAAA,gBAAc,cAgBGc,kBAAkBZ,MAErC,OACEC,EAAAA,EAAAA,KAACP,EAAD,UACGG,EAAMK,KAAI,SAACC,GAAD,eACTF,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,UACEA,EAAAA,EAAAA,KAACG,EAAAA,KAAD,CAAMC,IAAIF,SAAA,QAAAA,EAAAA,EAAMG,mBAAN,WAAAH,EAAA,EAAmBI,OAAQ,GAArC,SACGJ,SADH,UACGA,EAAMG,mBADT,aACGE,EAAmBC,SAFfN,EAAKO,GADf,KAtBA,ECaP,EAX4B,WAC1B,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAD,CAAQC,UAAU,OAAlBC,SAAAA,EACEf,EAAAA,EAAAA,KAAAA,KAAAA,CAAAe,SAAAA,eACAf,EAAAA,EAAAA,KAACL,EAAD,KACAK,EAAAA,EAAAA,KAAAA,KAAAA,CAAAe,SAAAA,oBACAf,EAAAA,EAAAA,KAACU,EAAD,MANN,C","sources":["webpack://mydatahack-blog-site-gatsby/./src/components/BlogList/BlogList.styled.tsx","webpack://mydatahack-blog-site-gatsby/./src/components/BlogList/BlogList.tsx","webpack://mydatahack-blog-site-gatsby/./src/components/MdPageList/MdPageList.tsx","webpack://mydatahack-blog-site-gatsby/./src/pages/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BlogUl = styled.ul`\n  list-style-type: circle;\n`\n","import { graphql, Link, useStaticQuery } from 'gatsby'\n\nimport { BlogUl } from './BlogList.styled'\n\nexport const BlogList = () => {\n  const data = useStaticQuery<Queries.getMdxDataForBlogListQuery>(graphql`\n    query getMdxDataForBlogList {\n      allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n        nodes {\n          id\n          frontmatter {\n            title\n            date\n            description\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMdx.nodes\n\n  return (\n    <BlogUl>\n      {posts.map((post) => (\n        <li key={post.id}>\n          <Link to={post?.frontmatter?.slug || ''}>\n            {post?.frontmatter?.title}\n          </Link>\n        </li>\n      ))}\n    </BlogUl>\n  )\n}\n","import { graphql, Link, useStaticQuery } from 'gatsby'\n\nimport { BlogUl } from '../BlogList/BlogList.styled'\n\nexport const MdPageList = () => {\n  const data =\n    useStaticQuery<Queries.getMarkdownPageDataForBlogListQuery>(graphql`\n      query getMarkdownPageDataForBlogList {\n        allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n          nodes {\n            id\n            frontmatter {\n              title\n              date\n              description\n              slug\n            }\n          }\n        }\n      }\n    `)\n\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <BlogUl>\n      {posts.map((post) => (\n        <li key={post.id}>\n          <Link to={post?.frontmatter?.slug || ''}>\n            {post?.frontmatter?.title}\n          </Link>\n        </li>\n      ))}\n    </BlogUl>\n  )\n}\n","import React from 'react'\n\nimport { BlogList } from '../components/BlogList'\nimport { Layout } from '../components/Layout'\nimport { MdPageList } from '../components/MdPageList'\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout siteTitle=\"Home\">\n      <h2>Blog list</h2>\n      <BlogList />\n      <h2>Markdown pages</h2>\n      <MdPageList />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["BlogUl","styled","BlogList","posts","useStaticQuery","allMdx","nodes","_jsx","map","post","Link","to","frontmatter","slug","_post$frontmatter2","title","id","MdPageList","allMarkdownRemark","_jsxs","Layout","siteTitle","children"],"sourceRoot":""}