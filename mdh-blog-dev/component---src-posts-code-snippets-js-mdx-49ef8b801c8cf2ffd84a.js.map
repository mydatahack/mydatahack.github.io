{"version":3,"file":"component---src-posts-code-snippets-js-mdx-49ef8b801c8cf2ffd84a.js","mappings":"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","sources":["webpack://mydatahack-blog-site-gatsby/./node_modules/@mdx-js/react/lib/index.js","webpack://mydatahack-blog-site-gatsby/./src/posts/code/snippets-js.mdx","webpack://mydatahack-blog-site-gatsby/./src/components/PostLayout/PostLayout.tsx"],"sourcesContent":["import _defineProperty from \"/home/runner/work/mydatahack-blog-site-gatsby/mydatahack-blog-site-gatsby/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\nimport React from 'react';\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\n\nexport var MDXContext = React.createContext({});\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\n\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\n\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Memoize to avoid unnecessary top-level context changes\n\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n/** @type {Components} */\n\nvar emptyObject = {};\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\n\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {PostLayout} from \"../../components/PostLayout\";\nconst MDXLayout = ({children, pageContext}) => React.createElement(PostLayout, {\n  pageContext: pageContext\n}, children);\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"1. Grid component for Material UI\"), \"\\n\", React.createElement(_components.p, null, \"I was trying to figure out how the \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;Grid></code>\"\n    }\n  }), \" component calculate the width. It is in \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gridGenerator.ts</code>\"\n    }\n  }), \". It seems to calculate the percentage.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateGridSizeStyles</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> theme<span class=\\\"token punctuation\\\">,</span> ownerState <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> Props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> getSelfSpacing <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createGetSelfSpacing</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  traverseBreakpoints<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token string\\\">'auto'</span> <span class=\\\"token operator\\\">|</span> number <span class=\\\"token operator\\\">|</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n    theme<span class=\\\"token punctuation\\\">.</span>breakpoints<span class=\\\"token punctuation\\\">,</span>\\n    ownerState<span class=\\\"token punctuation\\\">.</span>gridSize<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">appendStyle<span class=\\\"token punctuation\\\">,</span> value</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">maxWidth</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'100%'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexShrink</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">maxWidth</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'none'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">width</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> value <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'number'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        style <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">flexGrow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">flexBasis</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'auto'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">width</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">calc(100% * </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> / </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">getParentColumns</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>\\n            <span class=\\\"token function\\\">isNestedContainer</span><span class=\\\"token punctuation\\\">(</span>ownerState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\"> + </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">getSelfSpacing</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'column'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span>\\n          <span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">)</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token function\\\">appendStyle</span><span class=\\\"token punctuation\\\">(</span>styles<span class=\\\"token punctuation\\\">,</span> style<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> styles<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lg</code>\"\n    }\n  }), \" (or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">md</code>\"\n    }\n  }), \", \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sm</code>\"\n    }\n  }), \", or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">xm</code>\"\n    }\n  }), \") takes either \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GridSize</code>\"\n    }\n  }), \" or \", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boolean</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">GridSize</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'auto'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">RegularBreakpoints</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/**\\n   * If a number, it sets the number of columns the grid item uses.\\n   * It can't be greater than the total number of columns of the container (12 by default).\\n   * If 'auto', the grid item's width matches its content.\\n   * If false, the prop is ignored.\\n   * If true, the grid item's width grows to use the space available in the grid container.\\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\\n   * @default false\\n   */</span>\\n  lg<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token operator\\\">|</span> GridSize<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">...</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Table APIs\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Table</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\"> \\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span>  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">TableRow</span></span> <span class=\\\"token attr-name\\\">span</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token constant\\\">SM</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">LG</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">with</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>67px<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\"> -> with: 2/12 %\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Table</span></span><span class=\\\"token punctuation\\\">></span></span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import { ReactNode } from 'react'\n\nimport { Layout } from '../Layout'\n\ninterface PostLayoutProps {\n  children: ReactNode\n  pageContext: any\n}\n\nexport const PostLayout = ({ children, pageContext }: PostLayoutProps) => {\n  // When we have error here for undefined title, we need to stop and start gatsby.\n  // then, it will register the values in frontmatter\n  const { title, description } = pageContext.frontmatter\n\n  return (\n    <Layout siteTitle={title} description={description}>\n      {children}\n    </Layout>\n  )\n}\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","MDXContext","useMDXComponents","components","contextComponents","MDXLayout","children","pageContext","React","PostLayout","_createMdxContent","props","_components","assign","h2","p","div","_provideComponents","dangerouslySetInnerHTML","__html","frontmatter","title","description","_jsx","Layout","siteTitle"],"sourceRoot":""}