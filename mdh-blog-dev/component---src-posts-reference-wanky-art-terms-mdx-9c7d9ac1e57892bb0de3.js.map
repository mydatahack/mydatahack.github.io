{"version":3,"file":"component---src-posts-reference-wanky-art-terms-mdx-9c7d9ac1e57892bb0de3.js","mappings":"uLAIA,MAAMA,EAAYC,IAAA,IAAC,SAACC,EAAQ,YAAEC,GAAYF,EAAA,OAAKG,EAAAA,cAAoBC,EAAAA,EAAY,CAC7EF,YAAaA,GACZD,EAAS,EACZ,SAASI,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOZ,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBI,EAAYG,GAAI,KAAM,QAAS,KAAMP,EAAAA,cAAoBI,EAAYI,GAAI,KAAM,KAAMR,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,4BAA6B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,iBAAkB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,aAAc,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,YAAa,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,sBAAuB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yBAA0B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yBAA0B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yBAA0B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,gBAAiB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,gBAAiB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,cAAe,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,oBAAqB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,iBAAkB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,mBAAoB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,wBAAyB,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,cAAe,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,aAAc,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yBAA0B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yBAA0B,KAAMT,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,6BAA8B,MAAO,KAAMT,EAAAA,cAAoBI,EAAYG,GAAI,KAAM,aAAc,KAAMP,EAAAA,cAAoBI,EAAYI,GAAI,KAAM,KAAMR,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,yEAA0E,MAAO,KAAMT,EAAAA,cAAoBI,EAAYG,GAAI,KAAM,WAAY,KAAMP,EAAAA,cAAoBI,EAAYI,GAAI,KAAM,KAAMR,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,KAAMT,EAAAA,cAAoBI,EAAYM,EAAG,KAAM,+bAAgc,MAAO,KAAMV,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,KAAMT,EAAAA,cAAoBI,EAAYM,EAAG,KAAM,kEAAmE,MAAO,KAAMV,EAAAA,cAAoBI,EAAYK,GAAI,KAAM,KAAMT,EAAAA,cAAoBI,EAAYM,EAAG,KAAM,8HAA+H,MAAO,MAC/wF,CAIA,UAHA,SAAoBP,GAClB,YADuB,IAALA,IAAAA,EAAQ,CAAC,GACpBH,EAAAA,cAAoBJ,EAAWO,EAAOH,EAAAA,cAAoBE,EAAmBC,GACtF,C,8ECTO,MAAMF,EAAaJ,IAAiD,IAAhD,SAAEC,EAAQ,YAAEC,GAA8BF,EAGnE,MAAM,MAAEgB,EAAK,YAAEC,GAAgBf,EAAYgB,YAE3C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,UAAWL,EAAOC,YAAaA,EAAYhB,SAChDA,GACM,C,sECgBN,MAAMqB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,IAChC,CAACS,EAAmBT,GACzB,C","sources":["webpack://mydatahack-blog-site-gatsby/./src/posts/reference/wanky-art-terms.mdx","webpack://mydatahack-blog-site-gatsby/./src/components/PostLayout/PostLayout.tsx","webpack://mydatahack-blog-site-gatsby/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {PostLayout} from \"../../components/PostLayout\";\nconst MDXLayout = ({children, pageContext}) => React.createElement(PostLayout, {\n  pageContext: pageContext\n}, children);\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"List\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"disjunctive purterbation\"), \"\\n\", React.createElement(_components.li, null, \"contextualise\"), \"\\n\", React.createElement(_components.li, null, \"eloquence\"), \"\\n\", React.createElement(_components.li, null, \"dialogue\"), \"\\n\", React.createElement(_components.li, null, \"devious simplicity\"), \"\\n\", React.createElement(_components.li, null, \"spacial relationships\"), \"\\n\", React.createElement(_components.li, null, \"juxtapose superimpose\"), \"\\n\", React.createElement(_components.li, null, \"abbration of the norm\"), \"\\n\", React.createElement(_components.li, null, \"contrasexual\"), \"\\n\", React.createElement(_components.li, null, \"place making\"), \"\\n\", React.createElement(_components.li, null, \"emblematic\"), \"\\n\", React.createElement(_components.li, null, \"atomic incursion\"), \"\\n\", React.createElement(_components.li, null, \"hallucinatory\"), \"\\n\", React.createElement(_components.li, null, \"imagined future\"), \"\\n\", React.createElement(_components.li, null, \"hyperrealised colour\"), \"\\n\", React.createElement(_components.li, null, \"legitimacy\"), \"\\n\", React.createElement(_components.li, null, \"ebuliency\"), \"\\n\", React.createElement(_components.li, null, \"chryselephantine poem\"), \"\\n\", React.createElement(_components.li, null, \"evocative reimagining\"), \"\\n\", React.createElement(_components.li, null, \"socio-political discourse\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Sentences\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Opacity and ambiguity can be deliberate effects in modernist writing.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Made up\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"I find the work unequivocally compelling because it contrasexualise the disjunctive purterbation of the quantitative phantasma in a deceptively sloquent manner, which superimposes the textual uality of the lost dialogue that juxtaposes the serendipity of the movement itself with the deviously simple complexity of the human emotions, hinting the existance of spacial and temporal relationships between the urban environment and homo sapience.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Your work has to participate in the socio-political discourse.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Be wary of anyone who denies art its true complex and eternal nature, repurposing it for their own political contrivances.\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  return React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props));\n}\nexport default MDXContent;\n","import { ReactNode } from 'react'\n\nimport { Layout } from '../Layout'\n\ninterface PostLayoutProps {\n  children: ReactNode\n  pageContext: any\n}\n\nexport const PostLayout = ({ children, pageContext }: PostLayoutProps) => {\n  // When we have error here for undefined title, we need to stop and start gatsby.\n  // then, it will register the values in frontmatter\n  const { title, description } = pageContext.frontmatter\n\n  return (\n    <Layout siteTitle={title} description={description}>\n      {children}\n    </Layout>\n  )\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["MDXLayout","_ref","children","pageContext","React","PostLayout","_createMdxContent","props","_components","Object","assign","h2","ul","li","p","_provideComponents","components","title","description","frontmatter","_jsx","Layout","siteTitle","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}