{"version":3,"file":"dd31fcce58fb81ed72081956ac3a1ea53e776123-7d4659ce6f95b6b601df.js","mappings":"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","sources":["webpack://mydatahack-blog-site-gatsby/./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://mydatahack-blog-site-gatsby/./src/fec/Typography/Typography.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/FlipCard/FlipCard.styled.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/FlipCard/FlipCard.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Carousel/Carousel.styled.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Carousel/Carousel.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/FlipCard/FlipCards.tsx","webpack://mydatahack-blog-site-gatsby/./src/fec/Space/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get; // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n\n\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\n\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };","import { css } from 'styled-components'\n\nimport { BREAKPOINT, LatoRegular } from '../styles'\n\nexport const TextRegular = css`\n  ${LatoRegular};\n  font-size: 0.875rem;\n\n  @media screen and (min-width: ${BREAKPOINT.SM}px) {\n    font-size: 1rem;\n  }\n`\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nimport { TextRegular } from '../Typography'\n\n// This controls the size of the flip card\nexport const StyledCard = styled.div`\n  position: relative;\n  width: 340px;\n  height: 280px;\n  perspective: 500px;\n  display: flex;\n  justify-content: center;\n`\n\nexport const StyledFlipCardContainer = styled(motion.div)`\n  position: absolute;\n  width: 300px;\n  height: 100%;\n  transform-style: preserve-3d;\n  color: #2a2727;\n  border-radius: 20px;\n  border: solid 1px #c7c7c7;\n`\n\nexport const StyledFlipCardFront = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backface-visibility: hidden;\n`\n\nexport const StyledFlipCardBack = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transform: rotateY(180deg);\n  backface-visibility: hidden;\n`\n\nexport const StyledP = styled.p`\n  ${TextRegular}\n  margin: 10px;\n`\n\nexport const StyledHeading = styled(StyledP)`\n  font-weight: bold;\n`\n","import { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\n\nimport {\n  StyledCard,\n  StyledFlipCardBack,\n  StyledFlipCardContainer,\n  StyledFlipCardFront,\n  StyledHeading,\n  StyledP,\n} from './FlipCard.styled'\n\nconst showBcakAnimate = {\n  rotateY: 180,\n}\n\nconst showFrontAnimate = {\n  rotateY: 0,\n}\n\nconst variants = {\n  showBack: showBcakAnimate,\n  showFront: showFrontAnimate,\n}\nconst flipTransition = {\n  x: { type: 'spring', stiffness: 100 },\n  default: { duration: 0.5 },\n}\n\nexport interface FlipCardProps {\n  word: string\n  definition: string\n  usage?: string\n}\n\nexport const FlipCard: React.VFC<FlipCardProps> = ({\n  word,\n  definition,\n  usage,\n}) => {\n  const [showBack, setShowBack] = useState(false)\n  const [ref, inView] = useInView()\n\n  useEffect(() => {\n    if (!inView) {\n      setShowBack(false)\n    }\n  }, [inView])\n\n  const onClickHandler = () => {\n    setShowBack(!showBack)\n  }\n\n  return (\n    <StyledCard onClick={onClickHandler}>\n      <StyledFlipCardContainer\n        ref={ref}\n        animate={showBack ? 'showBack' : 'showFront'}\n        variants={variants}\n        transition={flipTransition}\n        whileDrag={showFrontAnimate}\n      >\n        <StyledFlipCardFront>\n          <StyledP>{word}</StyledP>\n        </StyledFlipCardFront>\n        <StyledFlipCardBack>\n          <StyledHeading>Definition:</StyledHeading>\n          <StyledP>{definition}</StyledP>\n          <StyledHeading>Usage:</StyledHeading>\n          <StyledP>{usage}</StyledP>\n        </StyledFlipCardBack>\n      </StyledFlipCardContainer>\n    </StyledCard>\n  )\n}\n","import styled, { css } from 'styled-components'\n\nconst squareDimension = css`\n  width: 300px;\n  height: 500px;\n`\n\nexport const StyledSquare = styled.div`\n  ${squareDimension}\n  background-color: ${(props) => props.color};\n`\n\n// This controls the width of the carousel container.\nexport const StyledCarouselUl = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  list-style-type: none;\n  scroll-snap-type: x mandatory;\n  width: 350px;\n  height: 400px;\n  overflow: scroll;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const StyledCarouselLi = styled.li`\n  scroll-snap-align: center;\n`\n","import { ReactNode } from 'react'\n\nimport {\n  StyledCarouselLi,\n  StyledCarouselUl,\n  StyledSquare,\n} from './Carousel.styled'\n\nexport interface CarouselProps {\n  content: ReactNode[]\n}\n\nexport const Carousel: React.VFC<CarouselProps> = ({ content }) => {\n  return (\n    <StyledCarouselUl>\n      {content.map((node) => (\n        <StyledCarouselLi key={Math.random()}>{node}</StyledCarouselLi>\n      ))}\n    </StyledCarouselUl>\n  )\n}\n\nexport const Carousel2 = () => {\n  return (\n    <StyledCarouselUl>\n      <StyledCarouselLi>\n        <StyledSquare color=\"red\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"blue\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"pink\" />\n      </StyledCarouselLi>\n      <StyledCarouselLi>\n        <StyledSquare color=\"purple\" />\n      </StyledCarouselLi>\n    </StyledCarouselUl>\n  )\n}\n","import words from '../../data/words.json'\nimport { Carousel } from '../Carousel'\nimport { FlipCard } from './FlipCard'\n\nexport const FlipCards = () => {\n  return (\n    <Carousel\n      content={words.words\n        .sort(() => Math.random() - 0.5)\n        .map((word) => (\n          <FlipCard\n            key={word.word}\n            word={word.word}\n            definition={word.definition}\n            usage={word.usage}\n          />\n        ))}\n    />\n  )\n}\n","import styled from 'styled-components'\n\nimport { BREAKPOINT } from '../styles'\n\nexport const StyledSpace = styled.div`\n  margin: 30px;\n`\n\nexport const StyledContainerForFlipCard = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_setPrototypeOf","o","p","setPrototypeOf","__proto__","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","keys","sort","filter","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","_excluded","isPlainChildren","props","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","displayName","defaultProps","TextRegular","css","LatoRegular","BREAKPOINT","StyledCard","styled","StyledFlipCardContainer","motion","StyledFlipCardFront","StyledFlipCardBack","StyledP","StyledHeading","showFrontAnimate","rotateY","variants","showBack","showFront","flipTransition","x","type","stiffness","default","duration","FlipCard","word","definition","usage","useState","setShowBack","_temp","_ref","_React$useState","setRef","current","useEffect","result","useInView","onClick","animate","transition","whileDrag","squareDimension","StyledCarouselUl","color","StyledCarouselLi","Carousel","content","Math","random","FlipCards","words","StyledSpace","StyledContainerForFlipCard"],"sourceRoot":""}